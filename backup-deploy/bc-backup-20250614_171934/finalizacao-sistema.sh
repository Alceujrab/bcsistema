#!/bin/bash

# Script de Finaliza√ß√£o e Otimiza√ß√£o do Sistema
# Execute este script ap√≥s fazer upload dos arquivos para o servidor

echo "=== Sistema de Transa√ß√µes - Finaliza√ß√£o e Otimiza√ß√£o ==="
echo "Data: $(date)"
echo ""

# Navegar para o diret√≥rio do projeto
cd /workspaces/bcsistema/bc

echo "1. Limpando caches do Laravel..."
php artisan cache:clear
php artisan config:clear
php artisan route:clear
php artisan view:clear

echo "2. Otimizando configura√ß√µes..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

echo "3. Executando migra√ß√µes (se necess√°rio)..."
php artisan migrate --force

echo "4. Verificando permiss√µes..."
chmod -R 775 storage/
chmod -R 775 bootstrap/cache/
chown -R www-data:www-data storage/
chown -R www-data:www-data bootstrap/cache/

echo "5. Compilando assets..."
if [ -f "package.json" ]; then
    npm install --production
    npm run build
else
    echo "package.json n√£o encontrado, pulando compila√ß√£o de assets"
fi

echo "6. Copiando arquivos JavaScript..."
mkdir -p public/js
cp resources/js/transactions.js public/js/ 2>/dev/null || echo "Arquivo transactions.js j√° existe"

echo "7. Testando conectividade com banco de dados..."
php artisan tinker --execute="
try {
    \DB::connection()->getPdo();
    echo 'Conex√£o com banco: ‚úÖ OK\n';
} catch(Exception \$e) {
    echo 'Erro na conex√£o: ' . \$e->getMessage() . '\n';
}
"

echo "8. Verificando estrutura de tabelas..."
php artisan tinker --execute="
try {
    echo 'Transa√ß√µes: ' . \App\Models\Transaction::count() . ' registros\n';
    echo 'Contas: ' . \App\Models\BankAccount::count() . ' registros\n';
    echo 'Categorias: ' . \App\Models\Category::count() . ' registros\n';
} catch(Exception \$e) {
    echo 'Erro ao verificar tabelas: ' . \$e->getMessage() . '\n';
}
"

echo "9. Testando rotas principais..."
php artisan route:list --path=transactions | head -10

echo ""
echo "=== Finaliza√ß√£o Completa ==="
echo "‚úÖ Sistema otimizado e pronto para uso!"
echo ""
echo "üîó URLs de teste:"
echo "   - Dashboard: http://seu-dominio/"
echo "   - Transa√ß√µes: http://seu-dominio/transactions"
echo "   - API Test: http://seu-dominio/test"
echo ""
echo "üìù Pr√≥ximos passos:"
echo "   1. Acesse o sistema via navegador"
echo "   2. Teste as funcionalidades de edi√ß√£o inline"
echo "   3. Verifique os filtros e a√ß√µes em lote"
echo "   4. Teste a cria√ß√£o de categorias"
echo "   5. Valide a exporta√ß√£o de dados"
echo ""
echo "üö® Se encontrar erros, verifique:"
echo "   - Permiss√µes de arquivos (775/644)"
echo "   - Configura√ß√£o do banco no .env"
echo "   - Logs em storage/logs/"
echo ""

# Verificar se h√° erros nos logs recentes
if [ -f "storage/logs/laravel.log" ]; then
    echo "üìã √öltimos erros nos logs:"
    tail -10 storage/logs/laravel.log | grep -i error || echo "Nenhum erro encontrado nos logs recentes"
fi

echo ""
echo "Script executado com sucesso em $(date)"
